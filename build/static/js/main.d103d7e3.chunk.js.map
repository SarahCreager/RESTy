{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/index.js","components/results/index.js","app.js","index.js"],"names":["Header","Footer","Form","props","useState","urlValue","setURLValue","methodValue","setMethodValue","methodSelected","setMethodSelect","updateFormData","setUpdatedFormData","handleClick","e","method","target","id","toUpperCase","classList","remove","add","handleSelectedMethodStyle","onSubmit","preventDefault","formData","url","body","setRequestParams","className","onClick","onChange","value","name","type","Results","data","src","theme","App","setData","requestParams","useEffect","a","API_URL","axios","get","response","Headers","headers","count","Response","results","callApi","Fragment","Main","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"ySAUeA,MARf,WACE,OACE,iCACE,0CCCSC,MAJf,WACE,OAAO,gD,MCwEMC,MAvEf,SAAcC,GAEZ,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEA,EAA0CJ,mBAAS,IAAnD,mBAAOK,EAAP,KAAuBC,EAAvB,KAEA,EAA6CN,mBAAS,IAAtD,mBAAOO,EAAP,KAAuBC,EAAvB,KAOA,SAASC,EAAYC,GACnB,IAAIC,EAASD,EAAEE,OAAOC,GAAGC,cACzBV,EAAeO,GAIjB,SAAmCC,GAE7BP,GACFA,EAAeU,UAAUC,OAAO,YAIlCV,EAAgBM,GAChBA,EAAOG,UAAUE,IAAI,YAXrBC,CAA0BR,EAAEE,QA0B9B,OACE,mCACE,uBAAMO,SAdV,SAAsBT,GACpBA,EAAEU,iBAEF,IAAMC,EAAW,CACfV,OAAQR,GAAe,MACvBmB,IAAKrB,EACLsB,KAAMhB,GAGRR,EAAMyB,iBAAiBH,IAKrB,UACE,wBAAOI,UAAU,UAAjB,UACE,sBAAMC,QAASjB,EAAaI,GAAG,MAA/B,iBACA,sBAAMa,QAASjB,EAAaI,GAAG,OAA/B,kBACA,sBAAMa,QAASjB,EAAaI,GAAG,MAA/B,iBACA,sBAAMa,QAASjB,EAAaI,GAAG,SAA/B,uBAEF,kCACE,yCACA,uBAAOc,SA7Cf,SAAwBjB,GACtB,IAAMkB,EAAUlB,EAAEE,OAAZgB,MACN1B,EAAY0B,IA2C2BC,KAAK,MAAMC,KAAK,SACjD,wBAAQA,KAAK,SAAb,oBAEF,gCACE,8BAEoB,SAAhB3B,GAA0C,QAAhBA,EACtB,0BAAUwB,SAAU,SAACjB,GAAD,OAAOF,EAAmBE,EAAEE,OAAOgB,UACvD,e,uBClDHG,MAZf,SAAiBhC,GACf,OACE,kCACE,qBAAK,cAAY,OAAjB,SACGA,EAAMiC,KACH,cAAC,IAAD,CAAWC,IAAKlC,EAAMiC,KAAME,MAAM,yBAClC,gDC4CGC,MA7Cf,WACE,MAAwBnC,mBAAS,MAAjC,mBAAOgC,EAAP,KAAaI,EAAb,KACA,EAA0CpC,mBAAS,IAAnD,mBAAOqC,EAAP,KAAsBb,EAAtB,KA+BA,OAhBAc,qBAAU,WAAM,4CACd,gCAAAC,EAAA,0DACMF,EAAcf,IADpB,uBAEQkB,EAAUH,EAAcf,IAFhC,SAG2BmB,IAAMC,IAAIF,GAHrC,OAGUG,EAHV,OAIUX,EAAO,CACXY,QAASD,EAASE,QAClBC,MAAOH,EAASX,KAAKc,MACrBC,SAAUJ,EAASX,KAAKgB,SAE1BZ,EAAQJ,GATZ,4CADc,uBAAC,WAAD,wBAadiB,KACC,CAACZ,IAGF,eAAC,IAAMa,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAM1B,iBAAkBA,IACxB,sBAAKX,GAAG,gBAAR,6BAAyCwB,EAAc1B,UACvD,sBAAKE,GAAG,MAAR,kBAAoBwB,EAAcf,OAClC,cAAC,EAAD,CAASU,KAAMA,IACf,cAAC,EAAD,QC7CAmB,E,4JACJ,WACE,OAAO,cAAC,EAAD,Q,GAFQC,IAAMC,WAMnBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAAUJ,K","file":"static/js/main.d103d7e3.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return (\n    <header>\n      <h1>RESTy</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Footer() {\n  return <footer>&copy; 2018</footer>;\n}\n\nexport default Footer;\n","\nimport { useState } from 'react';\nimport './form.scss';\n\nfunction Form(props) {\n  // state that holds the URL inputted\n  const [urlValue, setURLValue] = useState('');\n  // state that holds the method name (GET, PUT, etc)\n  const [methodValue, setMethodValue] = useState('');\n  // state that holds the particular span selected so it can be styled\n  const [methodSelected, setMethodSelect] = useState('');\n  // state of form data entered in text field for PUT\n  const [updateFormData, setUpdatedFormData] = useState('');\n\n  function handleURLInput(e) {\n    let { value } = e.target;\n    setURLValue(value);\n  }\n\n  function handleClick(e) {\n    let method = e.target.id.toUpperCase();\n    setMethodValue(method);\n    handleSelectedMethodStyle(e.target);\n  }\n\n  function handleSelectedMethodStyle(target) {\n    // if a method is already selected remove class\n    if (methodSelected) {\n      methodSelected.classList.remove('selected');\n    }\n\n    // set state to current span and add selected class to style\n    setMethodSelect(target);\n    target.classList.add('selected');\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const formData = {\n      method: methodValue || 'GET',\n      url: urlValue,\n      body: updateFormData\n    };\n\n    props.setRequestParams(formData);\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label className=\"methods\">\n          <span onClick={handleClick} id=\"get\">GET</span>\n          <span onClick={handleClick} id=\"post\">POST</span>\n          <span onClick={handleClick} id=\"put\">PUT</span>\n          <span onClick={handleClick} id=\"delete\">DELETE</span>\n        </label>\n        <label >\n          <span>URL: </span>\n          <input onChange={handleURLInput} name='url' type='text' />\n          <button type=\"submit\">GO!</button>\n        </label>\n        <label>\n          <pre>\n            {\n              methodValue === 'POST' || methodValue === 'PUT'\n                ? <textarea onChange={(e) => setUpdatedFormData(e.target.value)}></textarea>\n                : null}\n          </pre>\n        </label>\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport ReactJson from 'react-json-view';\n\nimport './results.scss';\n\nfunction Results(props) {\n  return (\n    <section>\n      <pre data-testid=\"data\">\n        {props.data\n          ? <ReactJson src={props.data} theme=\"summerfruit:inverted\" />\n          : <p>...loading</p>}\n      </pre>\n    </section>\n  );\n}\n\nexport default Results;\n","import { useEffect, useState } from 'react';\nimport React from 'react';\nimport axios from 'axios';\nimport './app.scss';\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form';\nimport Results from './components/results';\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [requestParams, setRequestParams] = useState({});\n\n  // const callApi = async (requestParams) => {\n  //   let API_URL = requestParams.url;\n  //   const response = await axios.get(API_URL);\n\n  //   const data = {\n  //     Headers: response.headers,\n  //     count: response.data.count,\n  //     Response: response.data.results\n  //   };\n  //   setData(data);\n  //   setRequestParams(requestParams);\n  // };\n\n  useEffect(() => {\n    async function callApi() {\n      if (requestParams.url) {\n        let API_URL = requestParams.url;\n        const response = await axios.get(API_URL);\n        const data = {\n          Headers: response.headers,\n          count: response.data.count,\n          Response: response.data.results\n        };\n        setData(data);\n      }\n    }\n    callApi();\n  }, [requestParams]);\n\n  return (\n    <React.Fragment>\n      <Header />\n      <Form setRequestParams={setRequestParams} />\n      <div id='requestMethod'>Request Method: {requestParams.method}</div>\n      <div id='url'>URL: {requestParams.url}</div>\n      <Results data={data} />\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}